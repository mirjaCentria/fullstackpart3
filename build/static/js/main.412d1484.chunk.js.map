{"version":3,"sources":["components/PersonForm.js","components/ShowPersons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["PersonForm","addPerson","handleNameChange","handleNumberChange","name","number","console","log","onSubmit","value","onChange","type","ShowPersons","persons","newFilter","delPerson","filter","person","toLowerCase","includes","map","onClick","Filter","handleFilterChange","Notification","message","className","baseUrl","request","axios","get","then","response","data","newPerson","post","id","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setNewFilter","newMessage","setNewMessage","length","useEffect","personService","initialPersons","event","preventDefault","target","some","window","alert","concat","setTimeout","confirm","newp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.412d1484.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PersonForm = ({addPerson,handleNameChange, handleNumberChange, name, number}) => {\r\n    console.log('personform ', name, number)\r\n    return (\r\n      <form onSubmit={addPerson} >\r\n        <div>\r\n          name:        \r\n          <input   \r\n              name = 'name'\r\n              value = {name}          \r\n              onChange={handleNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number: \r\n          <input \r\n              value = {number} \r\n              onChange={handleNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" >add</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n  export default PersonForm","import React from 'react';\r\nimport Person from './Person.js';\r\nimport PersonForm from './PersonForm.js';\r\n\r\nconst ShowPersons = ({persons, newFilter, delPerson}) => {\r\n    console.log('showbbpersons ', persons)\r\n    return (\r\n      <div>\r\n        {persons.filter(person => \r\n            (person.name||'').toLowerCase().includes((newFilter||'').toLowerCase())).map(person =>\r\n              <div key={person.name}>\r\n              {person.name}  {person.number}   \r\n              <button onClick={() => delPerson(person)}>Delete</button>\r\n            </div>\r\n            )}     \r\n      </div>  \r\n    )\r\n  }\r\n  export default ShowPersons\r\n  ","import React from 'react';\r\n\r\nconst Filter = ({newFilter, handleFilterChange}) => {\r\n       return(\r\n        <div>\r\n            filter shown with \r\n            <input \r\n                filter = {newFilter} \r\n                onChange={handleFilterChange}\r\n            />\r\n        </div>\r\n   )\r\n}\r\nexport default Filter","import React, { useState, useEffect } from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n\r\n    if (message === null ) {\r\n      return null\r\n    }\r\n    else return (      \r\n      <div className=\"error\" >\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  export default Notification\r\n  \r\n","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n//const baseUrl = 'https://phonebookmirja.herokuapp.com/api/persons' \r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    console.log({baseUrl})\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const create = newPerson => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data)\r\n  }\r\n  \r\n  const update = (id, newPerson) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newPerson)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n  const remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default {   getAll,   create, update, remove     }\r\n","import React, { useState, useEffect } from 'react'\r\nimport ShowPersons from './components/ShowPersons.js';\r\nimport PersonForm from './components/PersonForm.js';\r\nimport Filter from './components/Filter.js';\r\nimport Notification from './components/Notification.js';\r\nimport personService from './services/persons'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n \r\n  const [persons, setPersons] = useState([])  \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ newFilter, setNewFilter ] = useState('')\r\n  const [ newMessage, setNewMessage] = useState(null)\r\n\r\n  const newPerson = { \r\n    name: newName, \r\n    number: newNumber,\r\n    id: persons.length +1,\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('effect')\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n    },[])\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()  \r\n\r\n    if(persons.some(person => person.name === newName)) \r\n    {\r\n        window.alert('$newName is already added to phonebook') \r\n        console.log('button clicked alert', event.target)\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }else\r\n    {\r\n        console.log('Add', newName)\r\n        setPersons(persons.concat(newPerson))\r\n        setNewName('')\r\n        setNewNumber('')\r\n        personService\r\n        .create(newPerson)\r\n\r\n        setNewMessage(\r\n          `Person '${newPerson.name}' was added to phonebook`\r\n        )\r\n        setTimeout(() => {\r\n          setNewMessage(null)\r\n        }, 5000)\r\n    }\r\n  }\r\n\r\n  const delPerson = (person) => {\r\n    console.log('delete ', person)\r\n    const del = window.confirm(`Do you really want to delete ${person.name}?`); \r\n    if(del === true){         \r\n      personService\r\n      .remove(person.id)\r\n      setPersons(persons.filter(newp => newp.id !== person.id))\r\n      setNewMessage(\r\n        `Person '${person.name}' was removed from phonebook`\r\n      )\r\n      setTimeout(() => {\r\n        setNewMessage(null)\r\n      }, 5000)\r\n    }     \r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    event.preventDefault()  \r\n    console.log('filter ',event.target.value)\r\n    setNewFilter(event.target.value)    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      \r\n      <Notification \r\n        message = {newMessage}\r\n      />\r\n\r\n      <Filter \r\n        value={newFilter} \r\n        handleFilterChange={handleFilterChange} />\r\n\r\n      <h3>Add new person</h3>\r\n\r\n      <PersonForm \r\n        addPerson = {addPerson}\r\n        handleNameChange = {handleNameChange}\r\n        handleNumberChange = {handleNumberChange}\r\n        name = {newName}\r\n        number = {newNumber}\r\n      />\r\n\r\n      <h3>Numbers</h3>  \r\n      <ShowPersons \r\n        persons = {persons} \r\n        newFilter ={newFilter}\r\n        delPerson = {delPerson}\r\n\r\n      />   \r\n    </div>  \r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}